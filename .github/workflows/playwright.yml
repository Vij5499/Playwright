name: Playwright Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    strategy:
      matrix:
        browser: [ chromium, firefox, webkit ]   # 3 parallel jobs
    runs-on: ubuntu-latest
    env:
      PW_BROWSER: ${{ matrix.browser }}          # pass to Playwright

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ env.PW_BROWSER }}

      - name: Run tests
        run: npx playwright test --project=${{ env.PW_BROWSER }}

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ env.PW_BROWSER }}
          path: playwright-report
          retention-days: 30
  perf-smoke:
    needs: test
    runs-on: ubuntu-latest

    # ---- service container ----
    services:
      todo-api:
        image: todo-api:ci              # ← pointing to the tag we’ll build
        ports:
          - 3000:3000
        options: >-
          --health-cmd="curl -f http://localhost:3000/todos/1 || exit 1"
          --health-interval=10s --health-retries=5

    steps:
      - uses: actions/checkout@v3

      # 1️⃣ Build the API image *inside this job*
      - name: Build todo-api image
        run: docker build -t todo-api:ci .

      # 2️⃣ Run k6 (k6 is pre-installed on Ubuntu runners)
      - name: Run k6 performance smoke
        run: k6 run perf/smoke.js